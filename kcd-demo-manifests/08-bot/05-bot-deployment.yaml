kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: "*"
    app.openshift.io/route-disabled: "false"
    app.openshift.io/vcs-ref: ""
    app.openshift.io/vcs-uri: "https://github.com/vrutkovs/muchanizer"
    deployment.kubernetes.io/revision: "1"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"muchanizer:bot","namespace":"muchanizer"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mirror-bot\")].image","paused":false}]'
  name: mirror-bot
  namespace: muchanizer
  labels:
    app: muchanizer
    app.kubernetes.io/component: muchanizer
    app.kubernetes.io/instance: muchanizer
    app.kubernetes.io/name: muchanizer
    app.kubernetes.io/part-of: muchanizer-app
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.12-ubi8
spec:
  replicas: 1
  selector:
    matchLabels:
      app: muchanizer
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: muchanizer
        deployment: mirror-bot
    spec:
      volumes:
        - name: settings
          secret:
            secretName: settings
            defaultMode: 420
      containers:
        - name: mirror-bot
          image: "image-registry.openshift-image-registry.svc:5000/muchanizer/muchanizer:bot"
          ports:
            - containerPort: 8501
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: settings
              readOnly: true
              mountPath: /app/.env
              subPath: .env
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
